{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","startList","goods","showList","openList","setState","isReverse","reverse","isSortedByAlph","sort","isReset","isSortedByLength","fruit1","fruit2","length","this","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAQIC,E,4MACJC,MAAQ,CACNC,UAAWH,EACXI,MAAOJ,EACPK,UAAU,G,EAGZC,SAAW,WACT,EAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBG,UAAWH,EAAMG,c,EAIrBG,UAAY,WACV,EAAKD,UAAS,SAAAL,GAGZ,MAAO,CACLE,MAHW,YAAOF,EAAME,OAGTK,e,EAKrBC,eAAiB,WACf,EAAKH,UAAS,SAAAL,GAGZ,MAAO,CACLE,MAHW,YAAOF,EAAME,OAGTO,Y,EAKrBC,QAAU,WACR,IAAQT,EAAc,EAAKD,MAAnBC,UAER,EAAKI,SAAS,CAAEH,MAAOD,K,EAGzBU,iBAAmB,WACjB,EAAKN,UAAS,SAAAL,GAGZ,MAAO,CACLE,MAHW,YAAOF,EAAME,OAGTO,MAAK,SAACG,EAAQC,GAAT,OAAoBD,EAAOE,OAASD,EAAOC,e,4CAKrE,WACE,IAAQZ,EAAUa,KAAKf,MAAfE,MAER,OACE,sBAAKc,UAAU,MAAf,UACE,sBAAKA,UAAU,eAAf,WAC2B,IAAxBD,KAAKf,MAAMG,UACV,wBACEa,UAAU,6BACVC,KAAK,SACLC,QAASH,KAAKX,SAHhB,mBAQF,wBACEY,UAAU,6BACVC,KAAK,SACLC,QAASH,KAAKT,UAHhB,qBAOA,wBACEU,UAAU,6BACVC,KAAK,SACLC,QAASH,KAAKP,eAHhB,iCAOA,wBACEQ,UAAU,6BACVC,KAAK,SACLC,QAASH,KAAKJ,iBAHhB,4BAOA,wBACEK,UAAU,4BACVC,KAAK,SACLC,QAASH,KAAKL,QAHhB,sBAQF,oBAAIM,UAAU,aAAd,mBACA,oBAAIA,UAAU,YAAd,SACGD,KAAKf,MAAMG,UACTD,EAAMiB,KAAI,SAAAC,GAAI,OACf,oBAAIJ,UAAU,YAAd,SAAsCI,GAAPA,e,GAjGzBC,IAAMC,WAyGTvB,IC3HfwB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bf730d5f.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  startList: string[],\n  goods: string[],\n  showList: boolean,\n};\nclass App extends React.Component<{}, State> {\n  state = {\n    startList: goodsFromServer,\n    goods: goodsFromServer,\n    showList: false,\n  };\n\n  openList = () => {\n    this.setState(state => ({\n      showList: !state.showList,\n    }));\n  };\n\n  isReverse = () => {\n    this.setState(state => {\n      const newList = [...state.goods];\n\n      return {\n        goods: newList.reverse(),\n      };\n    });\n  };\n\n  isSortedByAlph = () => {\n    this.setState(state => {\n      const newList = [...state.goods];\n\n      return {\n        goods: newList.sort(),\n      };\n    });\n  };\n\n  isReset = () => {\n    const { startList } = this.state;\n\n    this.setState({ goods: startList });\n  };\n\n  isSortedByLength = () => {\n    this.setState(state => {\n      const newList = [...state.goods];\n\n      return {\n        goods: newList.sort((fruit1, fruit2) => fruit1.length - fruit2.length),\n      };\n    });\n  };\n\n  render() {\n    const { goods } = this.state;\n\n    return (\n      <div className=\"app\">\n        <div className=\"app__buttons\">\n          {this.state.showList === false && (\n            <button\n              className=\"button is-primary is-light\"\n              type=\"button\"\n              onClick={this.openList}\n            >\n              Start\n            </button>\n          )}\n          <button\n            className=\"button is-warning is-light\"\n            type=\"button\"\n            onClick={this.isReverse}\n          >\n            Reverse\n          </button>\n          <button\n            className=\"button is-warning is-light\"\n            type=\"button\"\n            onClick={this.isSortedByAlph}\n          >\n            Sort alphabetically\n          </button>\n          <button\n            className=\"button is-warning is-light\"\n            type=\"button\"\n            onClick={this.isSortedByLength}\n          >\n            Sort by length\n          </button>\n          <button\n            className=\"button is-danger is-light\"\n            type=\"button\"\n            onClick={this.isReset}\n          >\n            Reset\n          </button>\n        </div>\n        <h1 className=\"app__title\">Goods</h1>\n        <ul className=\"app__list\">\n          {this.state.showList\n          && goods.map(good => (\n            <li className=\"app__item\" key={good}>{good}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}